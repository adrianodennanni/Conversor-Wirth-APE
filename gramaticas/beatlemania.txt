Program = "BEGIN" {Block} "END".

Block = "VARDEC" "{" Vardec "}" | "FUNCTION"  Function  | "DECLARATION" "{" Declaration "}"  .

Vardec =  { ( "CHAR" | "INTEGER") "id" [ "[" "num" "]" ] { "," "id" [ "[" "num" "]" ] } ";"}  .

Function = ("CHAR" | "INTEGER") "id" "(" Vardec ")" "{" {Block} "RETURN" "id" ";" "}"  .

Declaration =  {"LABEL" "id" [ "[" "num" "]" ] ";" | "ASSIGNMENT"  Assignment  | "IF" Conditional | "OUTPUT"  Write  }.

Assignment = "id" [ "[" "num" "]" ] "=" Expression ";" .

Conditional =   "("  Expression  ")"    "{" {Declaration}  "}"  { "ELSIF" "("  Expression  ")"    "{" {Declaration}  "}" } [ "ELSE"  "{"  {Declaration}  "}"  ] "END" .

Write = Expression { "," Expression }  ";" .

Expression = Exp1 [ ( "<" | ">" | "==" ) Exp1 ].

Exp1 = Exp2 { ("+" | "-" ) Exp2 } .

Exp2 = Exp3 { ("*" | "/" ) Exp3 } .

Exp3 = ["-"] ( "INPUT" | "id" [ "[" "num" "]" | "("  Expression  { "," Expression } ")"  ] | "num" | "(" Expression ")" )  .

